{"remainingRequest":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/babel-loader/lib/index.js??ref--9-1!/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--9-2!/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/plugin-content-blog/lib/markdownLoader.js??ref--9-3!/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/blog/2017-09-26-adding-rss.md?truncated=true","dependencies":[{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/blog/2017-09-26-adding-rss.md","mtime":1587975931161},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/.docusaurus/docusaurus-plugin-content-blog/site-blog-2017-09-26-adding-rss-md-ad7.json","mtime":1590590388852},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/cache-loader/dist/cjs.js","mtime":1590575507129},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/babel-loader/lib/index.js","mtime":1590575506971},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1590575510553},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/plugin-content-blog/lib/markdownLoader.js","mtime":1590575509730}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2V1YW5taWxsYXIvQ2xpZW50cy9QbGFuL0RldmVsb3BtZW50L29wZW5jcnZzLmdpdGh1Yi5pby93ZWJzaXRlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSIvVXNlcnMvZXVhbm1pbGxhci9DbGllbnRzL1BsYW4vRGV2ZWxvcG1lbnQvb3BlbmNydnMuZ2l0aHViLmlvL3dlYnNpdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IHZhciBmcm9udE1hdHRlcj17dGl0bGU6J0FkZGluZyBSU1MgU3VwcG9ydCcsYXV0aG9yOidFcmljIE5ha2FnYXdhJyxhdXRob3JVUkw6J2h0dHA6Ly90d2l0dGVyLmNvbS9lcmljbmFrYWdhd2EnLGF1dGhvckZCSUQ6NjYxMjc3MTczfTtleHBvcnQgdmFyIG1ldGFkYXRhPXsicGVybWFsaW5rIjoiL29wZW5jcnZzLWNvcmUvYmxvZy8yMDE3LzA5LzI2L2FkZGluZy1yc3MiLCJzb3VyY2UiOiJAc2l0ZS9ibG9nLzIwMTctMDktMjYtYWRkaW5nLXJzcy5tZCIsImRlc2NyaXB0aW9uIjoiVGhpcyBpcyBhIHRlc3QgcG9zdC4iLCJkYXRlIjoiMjAxNy0wOS0yNlQwMDowMDowMC4wMDBaIiwidGFncyI6W10sInRpdGxlIjoiQWRkaW5nIFJTUyBTdXBwb3J0IiwicmVhZGluZ1RpbWUiOjAuMDU1LCJ0cnVuY2F0ZWQiOmZhbHNlLCJwcmV2SXRlbSI6eyJ0aXRsZSI6Ik5ldyBWZXJzaW9uIDEuMC4wIiwicGVybWFsaW5rIjoiL29wZW5jcnZzLWNvcmUvYmxvZy8yMDE3LzEwLzI0L25ldy12ZXJzaW9uLTEuMC4wIn0sIm5leHRJdGVtIjp7InRpdGxlIjoiQWRkaW5nIFJTUyBTdXBwb3J0IC0gUlNTIFRydW5jYXRpb24gVGVzdCIsInBlcm1hbGluayI6Ii9vcGVuY3J2cy1jb3JlL2Jsb2cvMjAxNy8wOS8yNS90ZXN0aW5nLXJzcyJ9fTsvKiBAanN4IG1keCAqL2V4cG9ydCB2YXIgcmlnaHRUb2M9W107dmFyIG1ha2VTaG9ydGNvZGU9ZnVuY3Rpb24gbWFrZVNob3J0Y29kZShuYW1lKXtyZXR1cm4gZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307fTt2YXIgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jOnJpZ2h0VG9jfTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoInAiLG51bGwsIlRoaXMgaXMgYSB0ZXN0IHBvc3QuIiksbWR4KCJwIixudWxsLCJBIHdob2xlIGJ1bmNoIG9mIG90aGVyIGluZm9ybWF0aW9uLiIpKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/blog/2017-09-26-adding-rss.md"],"names":["React","mdx","frontMatter","title","author","authorURL","authorFBID","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"kUACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,CAC5BC,KAAK,CAAE,oBADqB,CAE5BC,MAAM,CAAE,eAFoB,CAG5BC,SAAS,CAAE,iCAHiB,CAI5BC,UAAU,CAAE,SAJgB,CAApB,CAMT,MAAO,IAAMC,CAAAA,QAAQ,CAAG,CACtB,YAAa,2CADS,CAEtB,SAAU,qCAFY,CAGtB,cAAe,sBAHO,CAItB,OAAQ,0BAJc,CAKtB,OAAQ,EALc,CAMtB,QAAS,oBANa,CAOtB,cAAe,KAPO,CAQtB,YAAa,KARS,CAStB,WAAY,CACV,QAAS,mBADC,CAEV,YAAa,kDAFH,CATU,CAatB,WAAY,CACV,QAAS,0CADC,CAEV,YAAa,4CAFH,CAbU,CAAjB,CAkBL,cAEF,MAAO,IAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACP,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,CAClBP,QAAQ,CAARA,QADkB,CAApB,CAGA,GAAMQ,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,oDACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,oCAFK,CAGL,mDAHK,CAAP,CAKD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\ttitle: 'Adding RSS Support',\n\tauthor: 'Eric Nakagawa',\n\tauthorURL: 'http://twitter.com/ericnakagawa',\n\tauthorFBID: 661277173\n};\nexport const metadata = {\n  \"permalink\": \"/opencrvs-core/blog/2017/09/26/adding-rss\",\n  \"source\": \"@site/blog/2017-09-26-adding-rss.md\",\n  \"description\": \"This is a test post.\",\n  \"date\": \"2017-09-26T00:00:00.000Z\",\n  \"tags\": [],\n  \"title\": \"Adding RSS Support\",\n  \"readingTime\": 0.055,\n  \"truncated\": false,\n  \"prevItem\": {\n    \"title\": \"New Version 1.0.0\",\n    \"permalink\": \"/opencrvs-core/blog/2017/10/24/new-version-1.0.0\"\n  },\n  \"nextItem\": {\n    \"title\": \"Adding RSS Support - RSS Truncation Test\",\n    \"permalink\": \"/opencrvs-core/blog/2017/09/25/testing-rss\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`This is a test post.`}</p>\n    <p>{`A whole bunch of other information.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}