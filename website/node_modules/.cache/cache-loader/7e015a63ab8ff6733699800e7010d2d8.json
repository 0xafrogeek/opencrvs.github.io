{"remainingRequest":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/babel-loader/lib/index.js??ref--8-1!/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--8-3!/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/docs/core_functions/Notify_a_vital_event_44dd01fc728c4d7f8b88171d079d71d2.mdx","dependencies":[{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/docs/core_functions/Notify_a_vital_event_44dd01fc728c4d7f8b88171d079d71d2.mdx","mtime":1590691382740},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/.docusaurus/docusaurus-plugin-content-docs/site-docs-core-functions-notify-a-vital-event-44-dd-01-fc-728-c-4-d-7-f-8-b-88171-d-079-d-71-d-2-mdx-d9d.json","mtime":1590688941071},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/cache-loader/dist/cjs.js","mtime":1590575507129},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/babel-loader/lib/index.js","mtime":1590575506971},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1590575510553},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1590575509731}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2V1YW5taWxsYXIvQ2xpZW50cy9QbGFuL0RldmVsb3BtZW50L29wZW5jcnZzLmdpdGh1Yi5pby93ZWJzaXRlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSIvVXNlcnMvZXVhbm1pbGxhci9DbGllbnRzL1BsYW4vRGV2ZWxvcG1lbnQvb3BlbmNydnMuZ2l0aHViLmlvL3dlYnNpdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IHZhciBmcm9udE1hdHRlcj17aWQ6J25vdGlmeUFWaXRhbEV2ZW50Jyx0aXRsZTonTm90aWZ5IGEgdml0YWwgZXZlbnQnfTtleHBvcnQgdmFyIG1ldGFkYXRhPXsiaWQiOiJjb3JlX2Z1bmN0aW9ucy9ub3RpZnlBVml0YWxFdmVudCIsInRpdGxlIjoiTm90aWZ5IGEgdml0YWwgZXZlbnQiLCJkZXNjcmlwdGlvbiI6IlRoaXMgZnVuY3Rpb25hbGl0eSBhbGxvd3MgYSBSZWdpc3RyYXRpb24gQWdlbnQgb3IgYSBSZWdpc3RyYXIgdG8gdmlldyBiaXJ0aCBhbmQgZGVhdGggbm90aWZpY2F0aW9ucyBzZW50IGZyb20gZXh0ZXJuYWwgaGVhbHRoIGZhY2lsaXRpZXMuIFRoZXNlIG5vdGlmaWNhdGlvbnMgYXBwZWFyIGluIGluIHRoZSBcIkluLVByb2dyZXNzXCIgd29ya3F1ZXVlIGFzIHRoZXkgcmVxdWlyZSBmb2xsb3cgdXAgd29yayB0byBjb21wbGV0ZSBhbGwgbWFuZGF0b3J5IGZpZWxkcy4iLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL2NvcmVfZnVuY3Rpb25zL05vdGlmeV9hX3ZpdGFsX2V2ZW50XzQ0ZGQwMWZjNzI4YzRkN2Y4Yjg4MTcxZDA3OWQ3MWQyLm1keCIsInBlcm1hbGluayI6Ii9vcGVuY3J2cy1jb3JlL2RvY3MvY29yZV9mdW5jdGlvbnMvbm90aWZ5QVZpdGFsRXZlbnQiLCJzaWRlYmFyIjoiZG9jcyIsInByZXZpb3VzIjp7InRpdGxlIjoiU3lzdGVtIEFkbWluaXN0cmF0b3IiLCJwZXJtYWxpbmsiOiIvb3BlbmNydnMtY29yZS9kb2NzL3N5c3RlbV9vdmVydmlldy91c2VyX3R5cGVzL3N5c0FkbWluIn0sIm5leHQiOnsidGl0bGUiOiJEZWNsYXJlIGEgdml0YWwgZXZlbnQiLCJwZXJtYWxpbmsiOiIvb3BlbmNydnMtY29yZS9kb2NzL2NvcmVfZnVuY3Rpb25zL2RlY2xhcmVBVml0YWxFdmVudCJ9fTsvKiBAanN4IG1keCAqL2ltcG9ydCB1c2VCYXNlVXJsIGZyb20iQGRvY3VzYXVydXMvdXNlQmFzZVVybCI7ZXhwb3J0IHZhciByaWdodFRvYz1be3ZhbHVlOidDb25maWd1cmF0aW9uJyxpZDonY29uZmlndXJhdGlvbicsY2hpbGRyZW46W119LHt2YWx1ZTonVXNlciBTdG9yaWVzJyxpZDondXNlci1zdG9yaWVzJyxjaGlsZHJlbjpbe3ZhbHVlOic8c3Ryb25nPlZpZXcgbm90aWZpY2F0aW9ucyBmcm9tIGV4dGVybmFsIHN5c3RlbSBlLmcuIGhlYWx0aCAoREhJUzIpPC9zdHJvbmc+JyxpZDondmlldy1ub3RpZmljYXRpb25zLWZyb20tZXh0ZXJuYWwtc3lzdGVtLWVnLWhlYWx0aC1kaGlzMicsY2hpbGRyZW46W119LHt2YWx1ZTonVmlldyBpbmNvbXBsZXRlIGFwcGxpY2F0aW9ucyBzZW50IGZyb20gdGhlIGZpZWxkJyxpZDondmlldy1pbmNvbXBsZXRlLWFwcGxpY2F0aW9ucy1zZW50LWZyb20tdGhlLWZpZWxkJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidDb21wbGV0ZSBub3RpZmljYXRpb24nLGlkOidjb21wbGV0ZS1ub3RpZmljYXRpb24nLGNoaWxkcmVuOltdfV19XTt2YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17cmlnaHRUb2M6cmlnaHRUb2N9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsWyJjb21wb25lbnRzIl0pO3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCwiVGhpcyBmdW5jdGlvbmFsaXR5IGFsbG93cyBhICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii4uL3N5c3RlbV9vdmVydmlldy91c2VyX3R5cGVzL3JlZ2lzdHJhdGlvbkFnZW50In0pLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToiYSJ9LCJSZWdpc3RyYXRpb24gQWdlbnQiKSksIiBvciBhICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii4uL3N5c3RlbV9vdmVydmlldy91c2VyX3R5cGVzL3JlZ2lzdHJhciJ9KSxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6ImEifSwiUmVnaXN0cmFyIikpLCIgdG8gdmlldyBiaXJ0aCBhbmQgZGVhdGggbm90aWZpY2F0aW9ucyBzZW50IGZyb20gZXh0ZXJuYWwgaGVhbHRoIGZhY2lsaXRpZXMuIFRoZXNlIG5vdGlmaWNhdGlvbnMgYXBwZWFyIGluIGluIHRoZSBcIkluLVByb2dyZXNzXCIgd29ya3F1ZXVlIGFzIHRoZXkgcmVxdWlyZSBmb2xsb3cgdXAgd29yayB0byBjb21wbGV0ZSBhbGwgbWFuZGF0b3J5IGZpZWxkcy4iKSxtZHgoImgyIix7ImlkIjoiY29uZmlndXJhdGlvbiJ9LCJDb25maWd1cmF0aW9uIiksbWR4KCJwIixudWxsLCJOb3RpZmljYXRpb25zIGNhbiBiZSByZWNlaXZlZCBmcm9tIGFueSBleHRlcm5hbCBzeXN0ZW0gYW5kIGFuIGFkZGl0aW9uYWwgd29ya3F1ZXVlIGNhbiBiZSBhZGRlZCBzbyB0aGF0IHVzZXJzIGtub3cgd2hlcmUgdGhlIG5vdGlmaWNhdGlvbiBjYW1lIGZyb20uIiksbWR4KCJwIixudWxsLCJJbiBCYW5nbGFkZXNoLCBPcGVuQ1JWUyByZWNlaXZlcyBub3RpZmljYXRpb25zIGZyb20gREhJUzIuIiksbWR4KCJoMiIseyJpZCI6InVzZXItc3RvcmllcyJ9LCJVc2VyIFN0b3JpZXMiKSxtZHgoInAiLG51bGwsIkFzIGEgIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiSGVhbHRoIFdvcmtlciwiKSwiIEkgd2FudCB0byBiZSBhYmxlIHRvIHNlbmQgbm90aWZpY2F0aW9ucyBvZiBiaXJ0aCBhbmQgZGVhdGggZnJvbSB0aGUgaG9zcGl0YWwsIHNvIHRoYXQgdGhleSB0cmlnZ2VyIHRoZSBjaXZpbCByZWdpc3RyYXRpb24gcHJvY2Vzcy4iKSxtZHgoInAiLG51bGwsIkFzIGEgIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiUmVnaXN0cmF0aW9uIEFnZW50IiksIiwgSSB3YW50IHRvIGJlIGFibGUgdG8gc2VlIG5vdGlmaWNhdGlvbnMgdGhhdCBjb21lIGZyb20gZXh0ZXJuYWwgaGVhbHRoIHN5c3RlbXMgYW5kIHVwZGF0ZSB0aGVtLCBzbyB0aGF0IEkgY2FuIHNlbmQgdGhlbSBmb3IgYXBwcm92YWwgdG8gdGhlIFJlZ2lzdHJhci4iKSxtZHgoInAiLG51bGwsIkFzIGEgIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiUmVnaXN0cmFyIiksIiwgSSB3YW50IHRvIGJlIGFibGUgdG8gc2VlIG5vdGlmaWNhdGlvbnMgdGhhdCBjb21lIGZyb20gZXh0ZXJuYWwgaGVhbHRoIHN5c3RlbXMgYW5kIHVwZGF0ZSB0aGVtLCBzbyB0aGF0IEkgY2FuIHJlZ2lzdGVyIHRoZW0uIiksbWR4KCJwIixudWxsLCJBcyBhICIsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sIlJlZ2lzdHJhdGlvbiBBZ2VudCIpLCIsIEkgd2FudCB0byBiZSBhYmxlIHRvIHNlZSBpbmNvbXBsZXRlIGFwcGxpY2F0aW9ucyB0aGF0IGhhdmUgYmVlbiBzZW50IGZyb20gdGhlIGZpZWxkIGFuZCB1cGRhdGUgdGhlbSwgc28gdGhhdCBJIGNhbiBzZW5kIHRoZW0gZm9yIGFwcHJvdmFsIHRvIHRoZSBSZWdpc3RyYXIuIiksbWR4KCJwIixudWxsLCJBcyBhICIsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sIlJlZ2lzdHJhciIpLCIsIEkgd2FudCB0byBiZSBhYmxlIHRvIHNlZSBpbmNvbXBsZXRlIGFwcGxpY2F0aW9ucyB0aGF0IGhhdmUgYmVlbiBzZW50IGZyb20gdGhlIGZpZWxkIGFuZCB1cGRhdGUgdGhlbSwgc28gdGhhdCBJIGNhbiByZWdpc3RlciB0aGVtLiIpLG1keCgiaDEiLHsiaWQiOiJmdW5jdGlvbmFsaXR5In0sIkZ1bmN0aW9uYWxpdHkiKSxtZHgoImgzIix7ImlkIjoidmlldy1ub3RpZmljYXRpb25zLWZyb20tZXh0ZXJuYWwtc3lzdGVtLWVnLWhlYWx0aC1kaGlzMiJ9LG1keCgic3Ryb25nIix7cGFyZW50TmFtZToiaDMifSwiVmlldyBub3RpZmljYXRpb25zIGZyb20gZXh0ZXJuYWwgc3lzdGVtIGUuZy4gaGVhbHRoIChESElTMikiKSksbWR4KCJwIixudWxsLCJSZWdpc3RyYXRpb24gQWdlbnRzIGFuZCBSZWdpc3RyYXJzIGNhbiBzZWUgbm90aWZpY2F0aW9ucyBzZW50IGZyb20gYW4gZXh0ZXJuYWwgaGVhbHRoIHN5c3RlbSBpbiB0aGUgIixtZHgoImVtIix7cGFyZW50TmFtZToicCJ9LCJJbi1wcm9ncmVzcyIpLCIgd29ya3F1ZXVlLiBUaGV5IGNhbiBhbHNvIHNlZSB3aGljaCBoZWFsdGggZmFjaWxpdHkgdGhleSB3ZXJlIHNlbnQgZnJvbSBhbmQgd2hlbi4iKSxtZHgoImltZyIse2FsdDoiTm90aWZ5IGEgdml0YWwgZXZlbnQiLHNyYzp1c2VCYXNlVXJsKCJhc3NldHMvY29yZV9mdW5jdGlvbnMvTm90aWZ5X2Ffdml0YWxfZXZlbnRfNDRkZDAxZmM3MjhjNGQ3ZjhiODgxNzFkMDc5ZDcxZDIvSGVhbHRoX05vdGlmaWNhdGlvbi5wbmciKX0pLG1keCgiaDMiLHsiaWQiOiJ2aWV3LWluY29tcGxldGUtYXBwbGljYXRpb25zLXNlbnQtZnJvbS10aGUtZmllbGQifSwiVmlldyBpbmNvbXBsZXRlIGFwcGxpY2F0aW9ucyBzZW50IGZyb20gdGhlIGZpZWxkIiksbWR4KCJwIixudWxsLCJSZWdpc3RyYXRpb24gQWdlbnRzIGFuZCBSZWdpc3RyYXJzIGNhbiBzZWUgbm90aWZpY2F0aW9ucyBzZW50IGZyb20gZmllbGQgYWdlbnRzIHRoYXQgZG8gbm90IGhhdmUgYWxsIG1hbmRhdG9yeSBpbmZvcm1hdGlvbiBpbmNsdWRlZCBpbiB0aGUgIixtZHgoImVtIix7cGFyZW50TmFtZToicCJ9LCJJbi1wcm9ncmVzcyIpLCIgd29ya3F1ZXVlLiBUaGV5IGNhbiBhbHNvIHNlZSB3aGljaCBhZ2VudCBzZW50IHRoZSBpbmNvbXBsZXRlIGFwcGxpY2F0aW9uLCB3aGVuIGFuZCBmcm9tIHdoZXJlLiIpLG1keCgiaDMiLHsiaWQiOiJjb21wbGV0ZS1ub3RpZmljYXRpb24ifSwiQ29tcGxldGUgbm90aWZpY2F0aW9uIiksbWR4KCJwIixudWxsLCJGcm9tIHRoaXMgd29ya3F1ZXVlIHRoZSB1c2VyIGNhbiBkb3dubG9hZCB0aGUgbm90aWZpY2F0aW9uLCByZXZpZXcgdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkLCBhbmQgdXBkYXRlIGl0IHdpdGggdGhlIGluZm9ybWF0aW9uIHJlcXVpcmVkIHRvIHN1Ym1pdCBpdCBhcyBhIGNvbXBsZXRlIGFwcGxpY2F0aW9uIG9yIHJlZ2lzdGVyIGl0LiBUbyBlbmNvdXJhZ2UgYWN0aXZlIGZvbGxvdy11cCwgdGhleSBjYW4gc2VlIHRoZSBjb250YWN0IG51bWJlciBvZiB0aGUgQXBwbGljYW50IGluIHRoZSB3b3JrcXVldWUsIGl0IGlzIHRoZW4gdGhlaXIgcmVzcG9uc2liaWxpdHkgdG8gZm9sbG93LXVwIHdpdGggdGhlIEFwcGxpY2FudCB0byBjb21wbGV0ZSB0aGUgbWFuZGF0b3J5IGluZm9ybWF0aW9uIGFuZCBnZXQgc3VwcG9ydGluZyBkb2N1bWVudHMuIikpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/docs/core_functions/Notify_a_vital_event_44dd01fc728c4d7f8b88171d079d71d2.mdx"],"names":["React","mdx","frontMatter","id","title","metadata","useBaseUrl","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'notifyAVitalEvent',\n\ttitle: 'Notify a vital event'\n};\nexport const metadata = {\n  \"id\": \"core_functions/notifyAVitalEvent\",\n  \"title\": \"Notify a vital event\",\n  \"description\": \"This functionality allows a Registration Agent or a Registrar to view birth and death notifications sent from external health facilities. These notifications appear in in the \\\"In-Progress\\\" workqueue as they require follow up work to complete all mandatory fields.\",\n  \"source\": \"@site/docs/core_functions/Notify_a_vital_event_44dd01fc728c4d7f8b88171d079d71d2.mdx\",\n  \"permalink\": \"/opencrvs-core/docs/core_functions/notifyAVitalEvent\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"System Administrator\",\n    \"permalink\": \"/opencrvs-core/docs/system_overview/user_types/sysAdmin\"\n  },\n  \"next\": {\n    \"title\": \"Declare a vital event\",\n    \"permalink\": \"/opencrvs-core/docs/core_functions/declareAVitalEvent\"\n  }\n};\n  /* @jsx mdx */\nimport useBaseUrl from \"@docusaurus/useBaseUrl\";\nexport const rightToc = [{\n  value: 'Configuration',\n  id: 'configuration',\n  children: []\n}, {\n  value: 'User Stories',\n  id: 'user-stories',\n  children: [{\n    value: '<strong>View notifications from external system e.g. health (DHIS2)</strong>',\n    id: 'view-notifications-from-external-system-eg-health-dhis2',\n    children: []\n  }, {\n    value: 'View incomplete applications sent from the field',\n    id: 'view-incomplete-applications-sent-from-the-field',\n    children: []\n  }, {\n    value: 'Complete notification',\n    id: 'complete-notification',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`This functionality allows a `}<a parentName=\"p\" {...{\n        \"href\": \"../system_overview/user_types/registrationAgent\"\n      }}><strong parentName=\"a\">{`Registration Agent`}</strong></a>{` or a `}<a parentName=\"p\" {...{\n        \"href\": \"../system_overview/user_types/registrar\"\n      }}><strong parentName=\"a\">{`Registrar`}</strong></a>{` to view birth and death notifications sent from external health facilities. These notifications appear in in the \"In-Progress\" workqueue as they require follow up work to complete all mandatory fields.`}</p>\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <p>{`Notifications can be received from any external system and an additional workqueue can be added so that users know where the notification came from.`}</p>\n    <p>{`In Bangladesh, OpenCRVS receives notifications from DHIS2.`}</p>\n    <h2 {...{\n      \"id\": \"user-stories\"\n    }}>{`User Stories`}</h2>\n    <p>{`As a `}<strong parentName=\"p\">{`Health Worker,`}</strong>{` I want to be able to send notifications of birth and death from the hospital, so that they trigger the civil registration process.`}</p>\n    <p>{`As a `}<strong parentName=\"p\">{`Registration Agent`}</strong>{`, I want to be able to see notifications that come from external health systems and update them, so that I can send them for approval to the Registrar.`}</p>\n    <p>{`As a `}<strong parentName=\"p\">{`Registrar`}</strong>{`, I want to be able to see notifications that come from external health systems and update them, so that I can register them.`}</p>\n    <p>{`As a `}<strong parentName=\"p\">{`Registration Agent`}</strong>{`, I want to be able to see incomplete applications that have been sent from the field and update them, so that I can send them for approval to the Registrar.`}</p>\n    <p>{`As a `}<strong parentName=\"p\">{`Registrar`}</strong>{`, I want to be able to see incomplete applications that have been sent from the field and update them, so that I can register them.`}</p>\n    <h1 {...{\n      \"id\": \"functionality\"\n    }}>{`Functionality`}</h1>\n    <h3 {...{\n      \"id\": \"view-notifications-from-external-system-eg-health-dhis2\"\n    }}><strong parentName=\"h3\">{`View notifications from external system e.g. health (DHIS2)`}</strong></h3>\n    <p>{`Registration Agents and Registrars can see notifications sent from an external health system in the `}<em parentName=\"p\">{`In-progress`}</em>{` workqueue. They can also see which health facility they were sent from and when.`}</p>\n    <img alt=\"Notify a vital event\" src={useBaseUrl(\"assets/core_functions/Notify_a_vital_event_44dd01fc728c4d7f8b88171d079d71d2/Health_Notification.png\")} />\n    <h3 {...{\n      \"id\": \"view-incomplete-applications-sent-from-the-field\"\n    }}>{`View incomplete applications sent from the field`}</h3>\n    <p>{`Registration Agents and Registrars can see notifications sent from field agents that do not have all mandatory information included in the `}<em parentName=\"p\">{`In-progress`}</em>{` workqueue. They can also see which agent sent the incomplete application, when and from where.`}</p>\n    <h3 {...{\n      \"id\": \"complete-notification\"\n    }}>{`Complete notification`}</h3>\n    <p>{`From this workqueue the user can download the notification, review the information provided, and update it with the information required to submit it as a complete application or register it. To encourage active follow-up, they can see the contact number of the Applicant in the workqueue, it is then their responsibility to follow-up with the Applicant to complete the mandatory information and get supporting documents.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}