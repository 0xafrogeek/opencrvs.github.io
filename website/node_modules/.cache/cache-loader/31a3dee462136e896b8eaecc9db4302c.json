{"remainingRequest":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/babel-loader/lib/index.js??ref--9-1!/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--9-2!/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/plugin-content-blog/lib/markdownLoader.js??ref--9-3!/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/blog/2017-09-25-testing-rss.md","dependencies":[{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/blog/2017-09-25-testing-rss.md","mtime":1587975931160},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/.docusaurus/docusaurus-plugin-content-blog/site-blog-2017-09-25-testing-rss-md-4d8.json","mtime":1590590388852},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/cache-loader/dist/cjs.js","mtime":1590575507129},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/babel-loader/lib/index.js","mtime":1590575506971},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1590575510553},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/plugin-content-blog/lib/markdownLoader.js","mtime":1590575509730}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2V1YW5taWxsYXIvQ2xpZW50cy9QbGFuL0RldmVsb3BtZW50L29wZW5jcnZzLmdpdGh1Yi5pby93ZWJzaXRlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSIvVXNlcnMvZXVhbm1pbGxhci9DbGllbnRzL1BsYW4vRGV2ZWxvcG1lbnQvb3BlbmNydnMuZ2l0aHViLmlvL3dlYnNpdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IHZhciBmcm9udE1hdHRlcj17dGl0bGU6J0FkZGluZyBSU1MgU3VwcG9ydCAtIFJTUyBUcnVuY2F0aW9uIFRlc3QnLGF1dGhvcjonRXJpYyBOYWthZ2F3YScsYXV0aG9yVVJMOidodHRwOi8vdHdpdHRlci5jb20vZXJpY25ha2FnYXdhJyxhdXRob3JGQklEOjY2MTI3NzE3M307ZXhwb3J0IHZhciBtZXRhZGF0YT17InBlcm1hbGluayI6Ii9vcGVuY3J2cy1jb3JlL2Jsb2cvMjAxNy8wOS8yNS90ZXN0aW5nLXJzcyIsInNvdXJjZSI6IkBzaXRlL2Jsb2cvMjAxNy0wOS0yNS10ZXN0aW5nLXJzcy5tZCIsImRlc2NyaXB0aW9uIjoiMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MCIsImRhdGUiOiIyMDE3LTA5LTI1VDAwOjAwOjAwLjAwMFoiLCJ0YWdzIjpbXSwidGl0bGUiOiJBZGRpbmcgUlNTIFN1cHBvcnQgLSBSU1MgVHJ1bmNhdGlvbiBUZXN0IiwicmVhZGluZ1RpbWUiOjAuMDY1LCJ0cnVuY2F0ZWQiOnRydWUsInByZXZJdGVtIjp7InRpdGxlIjoiQWRkaW5nIFJTUyBTdXBwb3J0IiwicGVybWFsaW5rIjoiL29wZW5jcnZzLWNvcmUvYmxvZy8yMDE3LzA5LzI2L2FkZGluZy1yc3MifSwibmV4dEl0ZW0iOnsidGl0bGUiOiJOZXcgQmxvZyBQb3N0IiwicGVybWFsaW5rIjoiL29wZW5jcnZzLWNvcmUvYmxvZy8yMDE3LzA0LzEwL2Jsb2ctcG9zdC10d28ifX07LyogQGpzeCBtZHggKi9leHBvcnQgdmFyIHJpZ2h0VG9jPVtdO3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXtyaWdodFRvYzpyaWdodFRvY307dmFyIE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChfcmVmKXt2YXIgY29tcG9uZW50cz1fcmVmLmNvbXBvbmVudHMscHJvcHM9X29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLCIxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwIiksbWR4KCJwIixudWxsLCJUaGlzIHNob3VsZCBiZSB0cnVuY2F0ZWQuIiksbWR4KCJwIixudWxsLCJUaGlzIGxpbmUgc2hvdWxkIG5ldmVyIHJlbmRlciBpbiBYTUwuIikpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/blog/2017-09-25-testing-rss.md"],"names":["React","mdx","frontMatter","title","author","authorURL","authorFBID","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"kUACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,CAC5BC,KAAK,CAAE,0CADqB,CAE5BC,MAAM,CAAE,eAFoB,CAG5BC,SAAS,CAAE,iCAHiB,CAI5BC,UAAU,CAAE,SAJgB,CAApB,CAMT,MAAO,IAAMC,CAAAA,QAAQ,CAAG,CACtB,YAAa,4CADS,CAEtB,SAAU,sCAFY,CAGtB,cAAe,4PAHO,CAItB,OAAQ,0BAJc,CAKtB,OAAQ,EALc,CAMtB,QAAS,0CANa,CAOtB,cAAe,KAPO,CAQtB,YAAa,IARS,CAStB,WAAY,CACV,QAAS,oBADC,CAEV,YAAa,2CAFH,CATU,CAatB,WAAY,CACV,QAAS,eADC,CAEV,YAAa,8CAFH,CAbU,CAAjB,CAkBL,cAEF,MAAO,IAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACP,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,CAClBP,QAAQ,CAARA,QADkB,CAApB,CAGA,GAAMQ,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,oDACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,0QAFK,CAGL,yCAHK,CAOL,qDAPK,CAAP,CASD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\ttitle: 'Adding RSS Support - RSS Truncation Test',\n\tauthor: 'Eric Nakagawa',\n\tauthorURL: 'http://twitter.com/ericnakagawa',\n\tauthorFBID: 661277173\n};\nexport const metadata = {\n  \"permalink\": \"/opencrvs-core/blog/2017/09/25/testing-rss\",\n  \"source\": \"@site/blog/2017-09-25-testing-rss.md\",\n  \"description\": \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\",\n  \"date\": \"2017-09-25T00:00:00.000Z\",\n  \"tags\": [],\n  \"title\": \"Adding RSS Support - RSS Truncation Test\",\n  \"readingTime\": 0.065,\n  \"truncated\": true,\n  \"prevItem\": {\n    \"title\": \"Adding RSS Support\",\n    \"permalink\": \"/opencrvs-core/blog/2017/09/26/adding-rss\"\n  },\n  \"nextItem\": {\n    \"title\": \"New Blog Post\",\n    \"permalink\": \"/opencrvs-core/blog/2017/04/10/blog-post-two\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890`}</p>\n    <p>{`This should be truncated.`}</p>\n    {\n      /*truncate*/\n    }\n    <p>{`This line should never render in XML.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}