{"remainingRequest":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/theme-classic/src/theme/CodeBlock/index.js","dependencies":[{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/theme-classic/src/theme/CodeBlock/index.js","mtime":1590575509871},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/cache-loader/dist/cjs.js","mtime":1590575507129},{"path":"/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/babel-loader/lib/index.js","mtime":1590575506971}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/euanmillar/Clients/Plan/Development/opencrvs.github.io/website/node_modules/@docusaurus/theme-classic/src/theme/CodeBlock/index.js"],"names":["React","useEffect","useState","useRef","classnames","Highlight","defaultProps","Clipboard","rangeParser","useDocusaurusContext","usePrismTheme","styles","highlightLinesRangeRegex","getHighlightDirectiveRegex","languages","comments","js","start","end","jsBlock","jsx","python","html","directives","join","commentPattern","map","lang","RegExp","highlightDirectiveRegex","codeBlockTitleRegex","children","languageClassName","className","metastring","siteConfig","themeConfig","prism","showCopied","setShowCopied","mounted","setMounted","target","button","highlightLines","codeBlockTitle","prismTheme","test","highlightLinesRange","match","parse","filter","n","split","replace","clipboard","current","destroy","language","defaultLanguage","code","length","undefined","range","directiveRegex","lines","blockStart","index","line","lineNumber","directive","slice","reduce","final","item","splice","handleCopyCode","window","getSelection","empty","setTimeout","style","tokens","getLineProps","getTokenProps","codeBlockContent","copyButton","copyButtonWithTitle","codeBlock","codeBlockWithTitle","codeBlockLines","i","content","lineProps","key","includes","token"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nimport React, {useEffect, useState, useRef} from 'react';\nimport classnames from 'classnames';\nimport Highlight, {defaultProps} from 'prism-react-renderer';\nimport Clipboard from 'clipboard';\nimport rangeParser from 'parse-numeric-range';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport usePrismTheme from '@theme/hooks/usePrismTheme';\n\nimport styles from './styles.module.css';\n\nconst highlightLinesRangeRegex = /{([\\d,-]+)}/;\nconst getHighlightDirectiveRegex = (\n  languages = ['js', 'jsBlock', 'jsx', 'python', 'html'],\n) => {\n  // supported types of comments\n  const comments = {\n    js: {\n      start: '\\\\/\\\\/',\n      end: '',\n    },\n    jsBlock: {\n      start: '\\\\/\\\\*',\n      end: '\\\\*\\\\/',\n    },\n    jsx: {\n      start: '\\\\{\\\\s*\\\\/\\\\*',\n      end: '\\\\*\\\\/\\\\s*\\\\}',\n    },\n    python: {\n      start: '#',\n      end: '',\n    },\n    html: {\n      start: '<!--',\n      end: '-->',\n    },\n  };\n  // supported directives\n  const directives = [\n    'highlight-next-line',\n    'highlight-start',\n    'highlight-end',\n  ].join('|');\n  // to be more reliable, the opening and closing comment must match\n  const commentPattern = languages\n    .map(\n      (lang) =>\n        `(?:${comments[lang].start}\\\\s*(${directives})\\\\s*${comments[lang].end})`,\n    )\n    .join('|');\n  // white space is allowed, but otherwise it should be on it's own line\n  return new RegExp(`^\\\\s*(?:${commentPattern})\\\\s*$`);\n};\n// select comment styles based on language\nconst highlightDirectiveRegex = (lang) => {\n  switch (lang) {\n    case 'js':\n    case 'javascript':\n    case 'ts':\n    case 'typescript':\n      return getHighlightDirectiveRegex(['js', 'jsBlock']);\n\n    case 'jsx':\n    case 'tsx':\n      return getHighlightDirectiveRegex(['js', 'jsBlock', 'jsx']);\n\n    case 'html':\n      return getHighlightDirectiveRegex(['js', 'jsBlock', 'html']);\n\n    case 'python':\n    case 'py':\n      return getHighlightDirectiveRegex(['python']);\n\n    default:\n      // all comment types\n      return getHighlightDirectiveRegex();\n  }\n};\nconst codeBlockTitleRegex = /title=\".*\"/;\n\nexport default ({children, className: languageClassName, metastring}) => {\n  const {\n    siteConfig: {\n      themeConfig: {prism = {}},\n    },\n  } = useDocusaurusContext();\n\n  const [showCopied, setShowCopied] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  // The Prism theme on SSR is always the default theme but the site theme\n  // can be in a different mode. React hydration doesn't update DOM styles\n  // that come from SSR. Hence force a re-render after mounting to apply the\n  // current relevant styles. There will be a flash seen of the original\n  // styles seen using this current approach but that's probably ok. Fixing\n  // the flash will require changing the theming approach and is not worth it\n  // at this point.\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const target = useRef(null);\n  const button = useRef(null);\n  let highlightLines = [];\n  let codeBlockTitle = '';\n\n  const prismTheme = usePrismTheme();\n\n  if (metastring && highlightLinesRangeRegex.test(metastring)) {\n    const highlightLinesRange = metastring.match(highlightLinesRangeRegex)[1];\n    highlightLines = rangeParser\n      .parse(highlightLinesRange)\n      .filter((n) => n > 0);\n  }\n\n  if (metastring && codeBlockTitleRegex.test(metastring)) {\n    codeBlockTitle = metastring\n      .match(codeBlockTitleRegex)[0]\n      .split('title=')[1]\n      .replace(/\"+/g, '');\n  }\n\n  useEffect(() => {\n    let clipboard;\n\n    if (button.current) {\n      clipboard = new Clipboard(button.current, {\n        target: () => target.current,\n      });\n    }\n\n    return () => {\n      if (clipboard) {\n        clipboard.destroy();\n      }\n    };\n  }, [button.current, target.current]);\n\n  let language =\n    languageClassName && languageClassName.replace(/language-/, '');\n\n  if (!language && prism.defaultLanguage) {\n    language = prism.defaultLanguage;\n  }\n\n  // only declaration OR directive highlight can be used for a block\n  let code = children.replace(/\\n$/, '');\n  if (highlightLines.length === 0 && language !== undefined) {\n    let range = '';\n    const directiveRegex = highlightDirectiveRegex(language);\n    // go through line by line\n    const lines = children.replace(/\\n$/, '').split('\\n');\n    let blockStart;\n    // loop through lines\n    for (let index = 0; index < lines.length; ) {\n      const line = lines[index];\n      // adjust for 0-index\n      const lineNumber = index + 1;\n      const match = line.match(directiveRegex);\n      if (match !== null) {\n        const directive = match\n          .slice(1)\n          .reduce((final, item) => final || item, undefined);\n        switch (directive) {\n          case 'highlight-next-line':\n            range += `${lineNumber},`;\n            break;\n\n          case 'highlight-start':\n            blockStart = lineNumber;\n            break;\n\n          case 'highlight-end':\n            range += `${blockStart}-${lineNumber - 1},`;\n            break;\n\n          default:\n            break;\n        }\n        lines.splice(index, 1);\n      } else {\n        // lines without directives are unchanged\n        index += 1;\n      }\n    }\n    highlightLines = rangeParser.parse(range);\n    code = lines.join('\\n');\n  }\n\n  const handleCopyCode = () => {\n    window.getSelection().empty();\n    setShowCopied(true);\n\n    setTimeout(() => setShowCopied(false), 2000);\n  };\n\n  return (\n    <Highlight\n      {...defaultProps}\n      key={mounted}\n      theme={prismTheme}\n      code={code}\n      language={language}>\n      {({className, style, tokens, getLineProps, getTokenProps}) => (\n        <>\n          {codeBlockTitle && (\n            <div style={style} className={styles.codeBlockTitle}>\n              {codeBlockTitle}\n            </div>\n          )}\n          <div className={styles.codeBlockContent}>\n            <button\n              ref={button}\n              type=\"button\"\n              aria-label=\"Copy code to clipboard\"\n              className={classnames(styles.copyButton, {\n                [styles.copyButtonWithTitle]: codeBlockTitle,\n              })}\n              onClick={handleCopyCode}>\n              {showCopied ? 'Copied' : 'Copy'}\n            </button>\n            <div\n              tabIndex=\"0\"\n              className={classnames(className, styles.codeBlock, {\n                [styles.codeBlockWithTitle]: codeBlockTitle,\n              })}>\n              <div ref={target} className={styles.codeBlockLines} style={style}>\n                {tokens.map((line, i) => {\n                  if (line.length === 1 && line[0].content === '') {\n                    line[0].content = '\\n'; // eslint-disable-line no-param-reassign\n                  }\n\n                  const lineProps = getLineProps({line, key: i});\n\n                  if (highlightLines.includes(i + 1)) {\n                    lineProps.className = `${lineProps.className} docusaurus-highlight-code-line`;\n                  }\n\n                  return (\n                    <div key={i} {...lineProps}>\n                      {line.map((token, key) => (\n                        <span key={key} {...getTokenProps({token, key})} />\n                      ))}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </Highlight>\n  );\n};\n"]}]}